services:
  studio:
    build:
      context: ..
      dockerfile: studio/Dockerfile
      target: dev
    ports:
      - 8082:8082

  mail:
    container_name: ${STACK_NAME}-mail
    image: inbucket/inbucket:3.0.3
    ports:
      - '2500:2500' # SMTP
      - '9000:9000' # web interface
      - '1100:1100' # POP3

  auth:
    image: supabase/gotrue:v2.170.0
    restart: unless-stopped
    environment:
      - GOTRUE_SMTP_USER=${SMTP_USER}
      - GOTRUE_SMTP_PASS=${SMTP_PASS}

  meta:
    container_name: ${STACK_NAME}-meta
    image: supabase/postgres-meta:v0.87.1
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    ports:
      - 5555:8080
    # environment:
    #   PG_META_PORT: 8080
      # PG_META_DB_HOST: ${POSTGRES_HOST}
      # PG_META_DB_PORT: ${POSTGRES_PORT}
      # PG_META_DB_NAME: ${POSTGRES_DB}
      # PG_META_DB_USER: supabase_admin
      # PG_META_DB_PASSWORD: ${POSTGRES_PASSWORD}

  db:
    image: postgres:15
    restart: "no"
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
    volumes:
      - /var/lib/postgresql/data
      - ./data.sql:/docker-entrypoint-initdb.d/seed.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  storage:
    image: supabase/storage-api:v1.19.3
    restart: unless-stopped
    volumes:
      - /var/lib/storage